{"version":3,"sources":["conatiners/dashboard/dashboard.action.js","conatiners/deleted/deleted.action.js","conatiners/dashboard/dashBoard.js","conatiners/draft/draft.action.js","conatiners/draft/draft.js","conatiners/spam/spam.action.js","conatiners/spam/spam.js","conatiners/deleted/deleted.js","components/appHeader/appHeader.js","components/sidebar/sidebar.js","components/sidebar/sidebarstyle.js","routes/NavLinks.js","conatiners/home/home.style.js","conatiners/home/home.js","App.js","conatiners/dashboard/dashboard.reducer.js","conatiners/spam/spam.reducer.js","conatiners/draft/draft.reducer.js","conatiners/deleted/deleted.reducer.js","reducers/index.js","store.js","serviceWorker.js","index.js"],"names":["fetchUserDetails","response","dispatch","payload","type","updateDeletedMail","DashBoard","props","state","selectedMail","getHeaderCotent","bind","getContent","window","scrollTo","mail","EmailDetails","this","unread","setState","map","x","mId","updateEmailDetails","Grid","container","alignItems","style","fontSize","onClick","item","xs","justify","color","subject","filter","md","borderRight","minHeight","length","Accordion","width","expanded","AccordionSummary","deleteMail","Object","keys","Card","CardContent","Typography","variant","component","content","React","Component","withRouter","connect","DashBoardReducer","emailDetails","email","fetchUserDetailsInDraft","Draft","DraftReducer","fetchUserDetailsInSpam","Spam","SpamReducer","DeletedMail","console","log","DeletedMailReducer","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","padding","height","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","PrimarySearchAppBar","classes","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","aria-controls","aria-haspopup","className","AppBar","Toolbar","edge","Sidebar","handelSidebarClick","navlink","submenuExists","handleSidebarClick","nav","handleDrawer","path","refresh","history","push","renderItemText","label","ListItemText","primary","listItemTextFont","root","listItemTextPadding","inset","renderitem","data","isSubmenu","inBoxEmailDetails","spamEmailDetails","unreadMsgInbox","unreadMsgSpam","Tooltip","enterDelay","TransitionComponent","Fade","placement","tooltip","TransitionProps","timeout","ListItem","button","gutters","cx","toLowerCase","selected","submenuItem","icon","ListItemIcon","sidebarIconRoot","renderList","sidebarList","isFirstPath","List","marginBottom","scroll","key","subMenu","hide","isPathMatches","undefined","forEach","element","submenuData","subMenuKey","submenuL1","Collapse","submenuPadding","in","sidebarContent","obj","fetchLoginUser","applicationName","drawerClasses","location","pathname","titleUpdater","Hidden","mdUp","Drawer","disablePortal","paper","swipablePaper","smDown","drawerPaper","drawerPaperClose","document","titleGenerator","subHeaderList","reduce","acc","val","withWidth","withStyles","dividerColor","drawerClose","drawerCloseMargin","boxSizing","marginTop","paddingTop","whiteSpace","zIndex","overflowX","fixedBar","bottom","overflow","gridMargin","fontFamily","fontWeight","overflowY","subHeader","background","subheader","links","styles","accountLink","cursor","appBar","contentOpen","maxHeight","footerContainer","left","right","lastLogin","loaderLine","top","portalName","space","toolbar","HomePage","inBoxEmail","DraftEmail","spamEmail","mainClassCss","classNames","contentClose","exact","App","Home","INITIAL_STATE","starredEmail","action","combineReducers","createHistory","middleware","thunk","routerMiddleware","composedEnhancers","compose","applyMiddleware","store","createStore","connectRouter","rootReducer","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2e890cd2.chunk.js","sourcesContent":["export const fetchUserDetails = (response) => (dispatch) => {\r\n      dispatch({ payload: response, type: 'RECEIVE_EMAIL_DEATILS' });\r\n\r\n};\r\n\r\n\r\nexport const updateEmailDetails = (response) => (dispatch) => {\r\n      dispatch({ payload: response, type: 'UPDATE_EMAIL_DETAILS_OF_USER' })\r\n}\r\nexport const fetchLoginUser = (response) => (dispatch) => {\r\n      dispatch({ payload: response, type: 'RECEIVE_LOGINED_USER' });\r\n}\r\n\r\nexport const fetchstarredMail=(response)=>(dispatch)=>{\r\n      dispatch({payload:response,type:'FETCH_STARRED_EMAIL'})\r\n}\r\nexport const clearStarred=()=>(dispatch)=>{\r\n      dispatch({type:'UN_MOUNT_STARRED_EMAIL'})\r\n}","export const updateDeletedMail = (response) => (dispatch) => {\r\n    dispatch({ payload: response, type: 'UPDATE_DELETED_EMAIL_DETAILS_OF_USER' })\r\n}","/* eslint-disable no-unused-expressions */\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { fetchUserDetails, updateEmailDetails } from './dashboard.action';\r\nimport { updateDeletedMail } from '../deleted/deleted.action';\r\nimport { Grid } from '@material-ui/core';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nclass DashBoard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { selectedMail: {} }\r\n        this.getHeaderCotent = this.getHeaderCotent.bind(this);\r\n        this.getContent = this.getContent.bind(this);\r\n    };\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\n\r\n    getContent(mail) {\r\n        const { EmailDetails } = this.props;\r\n        mail.unread = false;\r\n        this.setState({ selectedMail: mail });\r\n        EmailDetails.map((x) => {\r\n            if (x.unread && x.mId === mail.mId) {\r\n                x.unread = false\r\n            }\r\n            return null;\r\n        });\r\n        this.props.updateEmailDetails(EmailDetails);\r\n    }\r\n    getHeaderCotent(mail) {\r\n        return (\r\n            <Grid container alignItems=\"center\" style={{ fontSize: '16px' }} onClick={() => this.getContent(mail)}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justify={'center'}>\r\n                        {mail.unread ? <span style={{ color: 'blue' }}>{mail.subject}</span> : <span>{mail.subject}</span>}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n\r\n    }\r\n    deleteMail(mail) {\r\n        const { EmailDetails } = this.props;\r\n        mail.unread = false;\r\n        if (mail.mId === this.state.selectedMail.mId) {\r\n            this.setState({ selectedMail: {} })\r\n        }\r\n        this.props.updateEmailDetails(EmailDetails.filter((x) => x.mId !== mail.mId));\r\n        this.props.updateDeletedMail(mail);\r\n    }\r\n\r\n    render() {\r\n        const { EmailDetails } = this.props;\r\n        return (\r\n            <Grid container >\r\n                <Grid item xs={12} md={3}>\r\n                    <div style={{ borderRight: '1px solid black', minHeight: '685px' }}>\r\n                        {EmailDetails && EmailDetails.length > 0 && EmailDetails.map((mail) => {\r\n                            return (\r\n                                <Accordion style={{ width: '100 %' }} expanded={false}>\r\n                                    <AccordionSummary\r\n                                    >\r\n                                        {this.getHeaderCotent(mail)}\r\n                                        <span onClick={() => { this.deleteMail(mail) }} style={{ color: '#0000ff7a' }}>\r\n                                            <DeleteIcon /></span>\r\n                                    </AccordionSummary>\r\n                                </Accordion>\r\n                            )\r\n                        })}\r\n\r\n                    </div>\r\n                </Grid>\r\n                {Object.keys(this.state.selectedMail).length > 0 && <Grid item xs={12} md={9}>\r\n                    <Grid container justify={'center'} >\r\n                        <Grid item xs={11}>\r\n                            <Card >\r\n                                <CardContent>\r\n                                    <Typography variant=\"h5\" component=\"h2\">\r\n                                        {this.state.selectedMail.subject}\r\n                                    </Typography>\r\n\r\n                                    <br />\r\n                                    <Typography variant=\"body2\" component=\"p\">\r\n                                        {this.state.selectedMail.content && this.state.selectedMail.content.length === 0 ? 'select an item to read' : this.state.selectedMail.content}\r\n                                        <br />\r\n                                    </Typography>\r\n                                </CardContent>\r\n\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>}\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n    DashBoardReducer\r\n}) => ({\r\n    EmailDetails: DashBoardReducer.emailDetails,\r\n    email: DashBoardReducer.email,\r\n});\r\nexport default withRouter(connect(mapStateToProps, { fetchUserDetails, updateEmailDetails, updateDeletedMail })(DashBoard));","export const fetchUserDetailsInDraft = (response) => (dispatch) => {\r\n      dispatch({ payload: response, type: 'RECEIVE_EMAIL_DEATILS_DRAFT' });\r\n\r\n};\r\n\r\n\r\nexport const updateEmailDetails = (response) => (dispatch) => {\r\n      dispatch({ payload: response, type: 'UPDATE_EMAIL_DETAILS_OF_USER_DRAFT' })\r\n}\r\nexport const fetchLoginUser = (response) => (dispatch) => {\r\n      dispatch({ payload: response, type: 'RECEIVE_LOGINED_USER_DRAFT' });\r\n}\r\n\r\nexport const fetchstarredMail=(response)=>(dispatch)=>{\r\n      dispatch({payload:response,type:'FETCH_STARRED_EMAIL_DRAFT'})\r\n}\r\nexport const clearStarred=()=>(dispatch)=>{\r\n      dispatch({type:'UN_MOUNT_STARRED_EMAIL_DRAFT'})\r\n}","/* eslint-disable no-unused-expressions */\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { fetchUserDetailsInDraft, updateEmailDetails } from './draft.action';\r\nimport { Grid } from '@material-ui/core';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nclass Draft extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { selectedMail: {} }\r\n        this.getHeaderCotent = this.getHeaderCotent.bind(this);\r\n        this.getContent = this.getContent.bind(this);\r\n    };\r\n\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\n\r\n    getContent(mail) {\r\n        const { EmailDetails } = this.props;\r\n        mail.unread = false;\r\n        this.setState({ selectedMail: mail });\r\n        EmailDetails.map((x) => {\r\n            if (x.unread && x.mId === mail.mId) {\r\n                x.unread = false\r\n            }\r\n            return null;\r\n        });\r\n        this.props.updateEmailDetails(EmailDetails);\r\n    }\r\n    getHeaderCotent(mail) {\r\n        return (\r\n            <Grid container alignItems=\"center\" style={{ fontSize: '16px' }} onClick={() => this.getContent(mail)}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justify={'center'}>\r\n                        {mail.unread ? <span style={{ color: 'blue' }}>{mail.subject}</span> : <span>{mail.subject}</span>}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n\r\n    }\r\n\r\n    deleteMail(mail) {\r\n        const { EmailDetails } = this.props;\r\n        mail.unread = false;\r\n        if (mail.mId === this.state.selectedMail.mId) {\r\n            this.setState({ selectedMail: {} })\r\n        }\r\n        this.props.updateEmailDetails(EmailDetails.filter((x) => x.mId !== mail.mId));\r\n    }\r\n    render() {\r\n        const { EmailDetails } = this.props;\r\n        return (\r\n            <Grid container >\r\n                <Grid item xs={12} md={3}>\r\n                    <div style={{ borderRight: '1px solid black', minHeight: '685px' }}>\r\n                        {EmailDetails && EmailDetails.length > 0 && EmailDetails.map((mail) => {\r\n                            return (\r\n                                <Accordion style={{ width: '100 %' }} expanded={false}>\r\n                                    <AccordionSummary\r\n                                    >\r\n                                        {this.getHeaderCotent(mail)}\r\n                                        <span onClick={() => { this.deleteMail(mail) }} style={{ color: '#0000ff7a' }}>\r\n                                            <DeleteIcon /></span>\r\n                                    </AccordionSummary>\r\n                                </Accordion>\r\n                            )\r\n                        })}\r\n\r\n                    </div>\r\n                </Grid>\r\n                {Object.keys(this.state.selectedMail).length > 0 && <Grid item xs={12} md={9}>\r\n                    <Grid container justify={'center'} >\r\n                        <Grid item xs={11}>\r\n                            <Card >\r\n                                <CardContent>\r\n\r\n                                    <Typography variant=\"h5\" component=\"h2\">\r\n                                        {this.state.selectedMail.subject}\r\n                                    </Typography>\r\n                                    <br />\r\n                                    <Typography variant=\"body2\" component=\"p\">\r\n                                        {this.state.selectedMail.content && this.state.selectedMail.content.length === 0 ? 'select an item to read' : this.state.selectedMail.content}\r\n                                        <br />\r\n                                    </Typography>\r\n                                </CardContent>\r\n\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>}\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n    DraftReducer\r\n}) => ({\r\n    EmailDetails: DraftReducer.emailDetails,\r\n    email: DraftReducer.email,\r\n});\r\nexport default withRouter(connect(mapStateToProps, { fetchUserDetailsInDraft, updateEmailDetails })(Draft));","export const fetchUserDetailsInSpam = (response) => (dispatch) => {\r\n      dispatch({ payload: response, type: 'RECEIVE_EMAIL_DEATILS_SPAM' });\r\n\r\n};\r\n\r\n\r\nexport const updateEmailDetails = (response) => (dispatch) => {\r\n      dispatch({ payload: response, type: 'UPDATE_EMAIL_DETAILS_OF_USER_SPAM' })\r\n}\r\nexport const fetchLoginUser = (response) => (dispatch) => {\r\n      dispatch({ payload: response, type: 'RECEIVE_LOGINED_USER_SPAM' });\r\n}\r\n\r\nexport const fetchstarredMail=(response)=>(dispatch)=>{\r\n      dispatch({payload:response,type:'FETCH_STARRED_EMAIL_SPAM'})\r\n}\r\nexport const clearStarred=()=>(dispatch)=>{\r\n      dispatch({type:'UN_MOUNT_STARRED_EMAIL_SPAM'})\r\n}","/* eslint-disable no-unused-expressions */\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { fetchUserDetailsInSpam, updateEmailDetails } from './spam.action';\r\nimport { updateDeletedMail } from '../deleted/deleted.action';\r\nimport { Grid } from '@material-ui/core';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nclass Spam extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { selectedMail: {} }\r\n        this.getHeaderCotent = this.getHeaderCotent.bind(this);\r\n        this.getContent = this.getContent.bind(this);\r\n    };\r\n\r\n\r\n\r\n    getContent(mail) {\r\n        const { EmailDetails } = this.props;\r\n        mail.unread = false;\r\n        this.setState({ selectedMail: mail });\r\n        EmailDetails.map((x) => {\r\n            if (x.unread && x.mId === mail.mId) {\r\n                x.unread = false\r\n            }\r\n            return null;\r\n        });\r\n        this.props.updateEmailDetails(EmailDetails);\r\n    }\r\n    getHeaderCotent(mail) {\r\n        return (\r\n            <Grid container alignItems=\"center\" style={{ fontSize: '16px' }} onClick={() => this.getContent(mail)}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justify={'center'}>\r\n                        {mail.unread ? <span style={{ color: 'blue' }}>{mail.subject}</span> : <span>{mail.subject}</span>}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n\r\n    }\r\n\r\n    deleteMail(mail) {\r\n        const { EmailDetails } = this.props;\r\n        mail.unread = false;\r\n        if (mail.mId === this.state.selectedMail.mId) {\r\n            this.setState({ selectedMail: {} })\r\n        }\r\n        this.props.updateEmailDetails( EmailDetails.filter((x) => x.mId !== mail.mId));\r\n        this.props.updateDeletedMail(mail);\r\n    }\r\n    render() {\r\n        const { EmailDetails } = this.props;\r\n        return (\r\n            <Grid container >\r\n                <Grid item xs={12} md={3}>\r\n                    <div style={{ borderRight: '1px solid black', minHeight: '685px' }}>\r\n                        {EmailDetails && EmailDetails.length > 0 && EmailDetails.map((mail) => {\r\n                            return (\r\n                                <Accordion style={{ width: '100 %' }} expanded={false}>\r\n                                    <AccordionSummary\r\n                                    >\r\n                                        {this.getHeaderCotent(mail)}\r\n                                        <span onClick={() => { this.deleteMail(mail) }} style={{ color: '#0000ff7a' }}>\r\n                                            <DeleteIcon /></span>\r\n                                    </AccordionSummary>\r\n                                </Accordion>\r\n                            )\r\n                        })}\r\n\r\n                    </div>\r\n                </Grid>\r\n                {Object.keys(this.state.selectedMail).length > 0 && <Grid item xs={12} md={9}>\r\n                    <Grid container justify={'center'} >\r\n                        <Grid item xs={11}>\r\n                            <Card >\r\n                                <CardContent>\r\n\r\n                                    <Typography variant=\"h5\" component=\"h2\">\r\n                                        {this.state.selectedMail.subject}\r\n                                    </Typography>\r\n                                    <br />\r\n                                    <Typography variant=\"body2\" component=\"p\">\r\n                                        {this.state.selectedMail.content && this.state.selectedMail.content.length === 0 ? 'select an item to read' : this.state.selectedMail.content}\r\n                                        <br />\r\n                                    </Typography>\r\n                                </CardContent>\r\n\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>}\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n    SpamReducer\r\n}) => ({\r\n    EmailDetails: SpamReducer.emailDetails,\r\n    email: SpamReducer.email,\r\n});\r\nexport default withRouter(connect(mapStateToProps, { fetchUserDetailsInSpam, updateEmailDetails, updateDeletedMail })(Spam));","/* eslint-disable no-unused-expressions */\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Grid } from '@material-ui/core';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nclass DeletedMail extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { selectedMail: {} }\r\n        this.getHeaderCotent = this.getHeaderCotent.bind(this);\r\n        this.getContent = this.getContent.bind(this);\r\n    };\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n    }\r\n    getContent(mail) {\r\n        this.setState({ selectedMail: mail });\r\n    }\r\n    getHeaderCotent(mail) {\r\n        return (\r\n            <Grid container alignItems=\"center\" style={{ fontSize: '16px' }} onClick={() => this.getContent(mail)}>\r\n                <Grid item xs={12}>\r\n                    <Grid container justify={'center'}>\r\n                        {mail.unread ? <span style={{ color: 'blue' }}>{mail.subject}</span> : <span>{mail.subject}</span>}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { EmailDetails } = this.props;\r\n        console.log(EmailDetails, 'emailDetails');\r\n        return (\r\n            <Grid container >\r\n                <Grid item xs={12} md={3}>\r\n                    <div style={{ borderRight: '1px solid black', minHeight: '685px' }}>\r\n                        {EmailDetails && EmailDetails.length > 0 && EmailDetails.map((mail) => {\r\n                            return (\r\n                                <Accordion style={{ width: '100 %' }} expanded={false}>\r\n                                    <AccordionSummary\r\n                                    >\r\n                                        {this.getHeaderCotent(mail)}\r\n                                    </AccordionSummary>\r\n                                </Accordion>\r\n                            )\r\n                        })}\r\n                        {EmailDetails && EmailDetails.length === 0 &&\r\n                            <p style={{color:'grey'}}>\r\n                                You dont have any deleted Mail\r\n                             </p>\r\n                        }\r\n\r\n                    </div>\r\n                </Grid>\r\n                {Object.keys(this.state.selectedMail).length > 0 && <Grid item xs={12} md={9}>\r\n                    <Grid container justify={'center'} >\r\n                        <Grid item xs={11}>\r\n                            <Card >\r\n                                <CardContent>\r\n\r\n                                    <Typography variant=\"h5\" component=\"h2\">\r\n                                        {this.state.selectedMail.subject}\r\n                                    </Typography>\r\n                                    <br />\r\n                                    <Typography variant=\"body2\" component=\"p\">\r\n                                        {this.state.selectedMail.content && this.state.selectedMail.content.length === 0 ? 'select an item to read' : this.state.selectedMail.content}\r\n                                        <br />\r\n                                    </Typography>\r\n                                </CardContent>\r\n\r\n                            </Card>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>}\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({\r\n    DeletedMailReducer\r\n}) => ({\r\n    EmailDetails: DeletedMailReducer.emailDetails\r\n});\r\nexport default withRouter(connect(mapStateToProps, {})(DeletedMail));","import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport ViewComfySharpIcon from '@material-ui/icons/ViewComfySharp';\r\nimport { Typography } from '@material-ui/core';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar() {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleProfileMenuOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>deeptikanta1234@gmail.com</MenuItem>\r\n            <MenuItem onClick={handleMenuClose}>deeptikantapanda@gmail.com</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                    <Badge badgeContent={4} color=\"secondary\">\r\n                        <MailIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Messages</p>\r\n            </MenuItem>\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n                    <Badge badgeContent={11} color=\"secondary\">\r\n                        <NotificationsIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Notifications</p>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleProfileMenuOpen}>\r\n                <IconButton\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"primary-search-account-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"inherit\"\r\n                >\r\n                    <AccountCircle />\r\n                </IconButton>\r\n                <p>Profile</p>\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.grow}>\r\n            <AppBar position=\"fixed\" style={{ color: '#fff', backgroundColor: 'black' }}>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                    >\r\n                            <ViewComfySharpIcon />\r\n                    </IconButton>\r\n                   <Typography>Outlook Mail</Typography>\r\n                    <div className={classes.grow} />\r\n                    <div className={classes.sectionDesktop}>\r\n                        <IconButton\r\n                            edge=\"end\"\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleProfileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                    </div>\r\n                    \r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n        </div>\r\n    );\r\n}\r\n","import {\r\n  Collapse,\r\n  Drawer,\r\n  Fade,\r\n  Hidden,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Tooltip,\r\n  withStyles,\r\n  withWidth\r\n} from '@material-ui/core';\r\nimport cx from 'classnames';\r\nimport { connect } from 'react-redux';\r\nimport * as React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { styles } from './sidebarstyle';\r\nimport { fetchLoginUser } from '../../conatiners/dashboard/dashboard.action';\r\n\r\n\r\nclass Sidebar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isFirstPath: true,\r\n      sidebarList: props.sidebarContent.map((obj) => {\r\n        return { ...obj, open: false };\r\n      })\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchLoginUser('deeptikanta1234@gmail.com')\r\n  }\r\n\r\n  /**\r\n   * Sidebar click button\r\n   */\r\n  handelSidebarClick = (navlink, submenuExists) => {\r\n    const { handleSidebarClick = (nav) => null, width, handleDrawer } = this.props;\r\n    if (width !== 'md' && width !== 'lg' && navlink.path !== '') {\r\n      // for cloasing drawer after clikc on item (only in small devices)\r\n      if (!submenuExists) {\r\n        // if submenu dont exist then only close\r\n        handleDrawer();\r\n      }\r\n    }\r\n\r\n    // refresh the page\r\n    if (navlink.refresh) {\r\n      handleSidebarClick(navlink);\r\n    }\r\n    // push path to route\r\n    return navlink.path && navlink.path !== '' && this.props.history.push(navlink.path);\r\n  };\r\n  /**\r\n   * Render text\r\n   */\r\n  renderItemText = (label, classes) => {\r\n    return (\r\n      <ListItemText\r\n        classes={{\r\n          primary: classes.listItemTextFont,\r\n          root: classes.listItemTextPadding\r\n        }}\r\n        inset={true}\r\n        primary={label}\r\n      />\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Render item\r\n   */\r\n  renderitem = (\r\n    data,\r\n    path,\r\n    classes,\r\n    submenuExists,\r\n    isSubmenu = false\r\n  ) => {\r\n    const {  type, } = data;\r\n    const { inBoxEmailDetails, spamEmailDetails } = this.props;\r\n    const unreadMsgInbox = inBoxEmailDetails.filter(x => x.unread === true).length;\r\n    const unreadMsgSpam = spamEmailDetails.filter(x => x.unread === true).length;\r\n    return (\r\n      <React.Fragment >\r\n        <Tooltip\r\n          enterDelay={this.props.open ? 2000 : 50}\r\n          TransitionComponent={Fade}\r\n          placement={'right'}\r\n          classes={{ tooltip: classes.tooltip }}\r\n          TransitionProps={{ timeout: 400 }}\r\n          title={data.label}\r\n        >\r\n          <ListItem\r\n            button={true}\r\n            classes={{\r\n              gutters: classes.gutters,\r\n              root: cx(path === (data.path && data.path.toLowerCase()) && classes.selected)\r\n            }}\r\n            id={data.id}\r\n            className={isSubmenu && this.props.open && classes.submenuItem}\r\n            onClick={this.handelSidebarClick.bind(this, data, submenuExists)}\r\n          >\r\n            {/* // only font awesome icons  */}\r\n            {data.icon !== '' && type === 'mu' ? (\r\n              <ListItemIcon classes={{ root: classes.sidebarIconRoot }}>\r\n\r\n              </ListItemIcon>\r\n            ) : (\r\n                <ListItemIcon classes={{ root: classes.sidebarIconRoot }}>\r\n\r\n                </ListItemIcon>\r\n              )}\r\n\r\n            {this.renderItemText(data.label, classes)}{data.label === 'Inbox' ? unreadMsgInbox === 0 ? '' : unreadMsgInbox : data.label === 'Junk Email' ? unreadMsgSpam === 0 ? '' : unreadMsgSpam : ''}\r\n            {submenuExists && (\r\n              <div style={{ fontSize: '0.9rem' }}>\r\n                {/* <Icons\r\n                  color={'white'}\r\n                  fixedWidth={true}\r\n                  type={'fa'}\r\n                  size={'lg'}\r\n                  classes={{ root: classes.sidebarIconRoot }}\r\n                  onClick={this.handleCollapse.bind(this, data)}\r\n                  name={data.open ? 'chervonUp' : 'chervonDown'}\r\n                /> */}\r\n              </div>\r\n            )}\r\n          </ListItem>\r\n        </Tooltip>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n  /**\r\n   * Render list\r\n   */\r\n  renderList = (classes, path, sidebarList) => {\r\n    const { isFirstPath } = this.state;\r\n    return (\r\n      <List\r\n        component=\"nav\"\r\n        classes={{\r\n          root: cx(classes.marginBottom, classes.scroll)\r\n        }}\r\n      >\r\n        {sidebarList.map((data, key) => {\r\n          const submenuExists = data.subMenu && data.subMenu.length > 0;\r\n          if (data.hide && data.hide === true) {\r\n            return null;\r\n          }\r\n          let isPathMatches = false;\r\n          if (submenuExists && data.subMenu !== undefined) {\r\n            data.subMenu.forEach((element) => {\r\n              if ((element.path).toLowerCase() === path.toLowerCase()) {\r\n                isPathMatches = true;\r\n              }\r\n            });\r\n          }\r\n          return (\r\n            <div key={key}>\r\n              {this.renderitem(data, path, classes, submenuExists)}\r\n              {submenuExists && (\r\n                <List component=\"nav\" style={{ padding: '0' }}>\r\n                  {data.subMenu !== undefined &&\r\n                    data.subMenu.map((submenuData, subMenuKey) => {\r\n                      const submenuL1 = submenuData.subMenu && submenuData.subMenu.length > 0;\r\n                      if (submenuData.hide && submenuData.hide === true) {\r\n                        return null;\r\n                      }\r\n                      return (\r\n                        <Collapse\r\n                          key={subMenuKey}\r\n                          className={classes.submenuPadding}\r\n                          in={(isFirstPath && isPathMatches) || data.open}\r\n                          timeout=\"auto\"\r\n                        >\r\n                          {this.renderitem(submenuData, path, classes, submenuL1, true)}\r\n                        </Collapse>\r\n                      );\r\n                    })}\r\n                </List>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </List>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { sidebarList } = this.state;\r\n    const { applicationName, classes, drawerClasses, handleDrawer, open } = this\r\n      .props;\r\n    const path = this.props.location.pathname.toLowerCase();\r\n    if (applicationName) {\r\n      this.titleUpdater(sidebarList, path);\r\n    }\r\n    return (\r\n      <React.Fragment style={{ backgroundColor: '#f5f5f5' }}>\r\n        {/* small screens  */}\r\n        <Hidden mdUp={true}>\r\n          <Drawer\r\n            disablePortal={true}\r\n            open={open}\r\n            onClose={handleDrawer}\r\n            classes={{\r\n              paper: cx(classes.swipablePaper, drawerClasses)\r\n            }}\r\n          >\r\n            {this.renderList(classes, path, sidebarList)}\r\n          </Drawer>\r\n        </Hidden>\r\n        {/* big screens  */}\r\n        <Hidden smDown={true}>\r\n          <Drawer\r\n            disablePortal={true}\r\n            variant=\"permanent\"\r\n            open={open}\r\n            classes={{\r\n              paper: cx(\r\n                classes.drawerPaper,\r\n                drawerClasses,\r\n                !this.props.open && classes.drawerPaperClose\r\n              )\r\n            }}\r\n          >\r\n            {this.renderList(classes, path, sidebarList)}\r\n          </Drawer>\r\n        </Hidden>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  titleUpdater(sidebarList, path) {\r\n    try {\r\n      document.title = this.titleGenerator(sidebarList, path) || this.props.applicationName;\r\n    } catch {\r\n      document.title = this.props.applicationName;\r\n    }\r\n  }\r\n\r\n\r\n  titleGenerator(subHeaderList, path) {\r\n    return subHeaderList.reduce((acc, obj) => {\r\n      if (path === (obj.path && obj.path.toLowerCase())) {\r\n        return obj.label;\r\n      } else if (obj.subMenu) {\r\n        const val = this.titleGenerator(obj.subMenu, path);\r\n        if (val) {\r\n          return `${obj.label}-${val}`;\r\n        }\r\n      }\r\n      return acc;\r\n    }, '');\r\n  }\r\n}\r\nconst mapStateToProps = ({\r\n  DashBoardReducer, SpamReducer\r\n}) => ({\r\n  inBoxEmailDetails: DashBoardReducer.emailDetails,\r\n  spamEmailDetails: SpamReducer.emailDetails\r\n});\r\nexport default withRouter(connect(mapStateToProps, {\r\n  fetchLoginUser\r\n})(withWidth()(withStyles(styles)((withRouter(Sidebar))))));","export const styles = () => {\r\n  return {\r\n    dividerColor: {\r\n    },\r\n    drawerClose: {\r\n      width: '3%'\r\n    },\r\n    drawerCloseMargin: {\r\n      marginLeft: '3%',\r\n    //   [theme.breakpoints.down('md')]: {\r\n    //     padding: '0px'\r\n    //   },\r\n      padding: '0px 15px',\r\n    //   transition: theme.transitions.create('margin', {\r\n    //     duration: theme.transitions.duration.enteringScreen,\r\n    //     easing: theme.transitions.easing.sharp\r\n    //   })\r\n    },\r\n    drawerPaper: {\r\n      boxSizing: 'border-box',\r\n      marginTop: '73px',\r\n      paddingTop: '8px',\r\n      position: 'fixed',\r\n    //   transition: theme.transitions.create('width', {\r\n    //     duration: theme.transitions.duration.enteringScreen,\r\n    //     easing: theme.transitions.easing.sharp\r\n    //   }),\r\n      whiteSpace: 'nowrap',\r\n      width: '15%',\r\n      zIndex: 4\r\n    },\r\n    drawerPaperClose: {\r\n      overflowX: 'hidden',\r\n    //   [theme.breakpoints.up('sm')]: {\r\n    //     width: theme.spacing.unit * 6\r\n    //   },\r\n    //   transition: theme.transitions.create('width', {\r\n    //     duration: theme.transitions.duration.leavingScreen,\r\n    //     easing: theme.transitions.easing.sharp\r\n    //   }),\r\n    },\r\n    fixedBar: {\r\n      '&:hover': {\r\n        backgroundColor:'blue'\r\n      },\r\n      bottom: 0,\r\n      marginTop: '0',\r\n      overflow: 'hidden',\r\n      position: 'fixed',\r\n    //   transition: theme.transitions.create('width', {\r\n    //     duration: theme.transitions.duration.enteringScreen,\r\n    //     easing: theme.transitions.easing.sharp\r\n    //   })\r\n    },\r\n    gridMargin: {\r\n      marginLeft: '15%',\r\n    //   [theme.breakpoints.down('md')]: {\r\n    //     marginLeft: 0\r\n    //   }\r\n    },\r\n    gutters: {\r\n      '&:hover': {\r\n       backgroundColor:'#61dafb4d'  \r\n      },\r\n      '&:active': {\r\n       backgroundColor:'#61dafb4d'  \r\n      },\r\n      padding: '7px 36px'\r\n    }\r\n    ,\r\n\r\n    listItemTextFont: {\r\n      fontFamily: 'inherit',\r\n      fontSize:'13px',\r\n      fontWeight: 500\r\n    },\r\n    listItemTextPadding: {\r\n      padding: 0,\r\n      whiteSpace: 'pre-line'\r\n    },\r\n    marginBottom: {\r\n      paddingTop: 0\r\n    },\r\n    scroll: {\r\n      backgroundColor: '#f2f5f5cc',\r\n      height: 'calc(100% - 63px)',\r\n      overflowX: 'hidden',\r\n      overflowY: 'auto'\r\n    },\r\n    selected: {\r\n      '& span': {\r\n        fontWeight: '600'\r\n      },\r\n      '& svg': {\r\n      },\r\n      //  paddingLeft: '13px!important'\r\n    },\r\n    sidebarIconRoot: {\r\n    //   color: overrides.sidebar.sidebarIconRootStyle.color\r\n    },\r\n    subHeader: {\r\n      background: 'blue',\r\n      padding: '0px 8px'\r\n    },\r\n    subheader: {\r\n      '&:hover': {\r\n        backgroundColor: 'blue'\r\n      },\r\n      backgroundColor: 'blue'\r\n    },\r\n    submenuItem: {\r\n      paddingLeft: '25px'\r\n    },\r\n    submenuPadding: {\r\n    },\r\n    swipablePaper: {\r\n      boxSizing: 'border-box',\r\n      marginTop: '0px',\r\n      paddingTop: '0px',\r\n      position: 'fixed',\r\n    //   transition: theme.transitions.create('width', {\r\n    //     duration: theme.transitions.duration.enteringScreen,\r\n    //     easing: theme.transitions.easing.sharp\r\n    //   }),\r\n      whiteSpace: 'nowrap',\r\n      width: '60%',\r\n    //   [theme.breakpoints.up('sm')]: {\r\n    //     width: '40%'\r\n    //   }\r\n    },\r\n    tooltip: {\r\n    }\r\n  };\r\n};\r\n","const links = [\r\n    {\r\n        id: 'inbox',\r\n        label: 'Inbox',\r\n        path: '/'\r\n    },\r\n    {\r\n        id: 'spam',\r\n        label: 'Junk Email',\r\n        path: '/spam'\r\n    },\r\n    {\r\n        id: 'draft',\r\n        label: 'Draft',\r\n        path: '/draft'\r\n    },\r\n    {\r\n        id: 'deleted',\r\n        label: 'Deleted Items',\r\n        path: '/deleted'\r\n    }, \r\n];\r\n\r\nexport default links;\r\n","const styles = () => {\r\n  return {\r\n    accountLink: {\r\n      '&:hover': {\r\n        color: '#0086d1'\r\n      },\r\n      color: '#0066c0',\r\n      cursor: 'pointer'\r\n    },\r\n    appBar: {\r\n      position: 'fixed',\r\n      width: '100%'\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      marginTop: '12px',\r\n\r\n\r\n      padding: '3px',\r\n\r\n      width: 'calc(100% - 72px)',\r\n      position: 'relative',\r\n      minHeight: 'calc(100vh - 115px - 12px)',\r\n      boxSizing: 'border-box',\r\n    },\r\n\r\n    contentOpen: {\r\n      width: '100%',\r\n      marginLeft: '227px',\r\n      marginTop: '11px'\r\n    },\r\n    drawerPaper: {\r\n      '& .MuiListItemIcon-root-68': {\r\n        color: 'white'\r\n      },\r\n      '& span': {\r\n        color: 'white'\r\n      },\r\n      backgroundColor: '#1f5a9e !important',\r\n      color: 'white',\r\n      marginTop: '57px',\r\n      maxHeight: '92vh',\r\n      overflowX: 'hidden',\r\n      overflowY: 'auto',\r\n      position: 'fixed',\r\n\r\n      whiteSpace: 'nowrap',\r\n      width: 225,\r\n      zIndex: '1'\r\n    },\r\n    drawerPaperClose: {\r\n      overflowX: 'hidden',\r\n\r\n\r\n      // width: theme.spacing.unit * 7\r\n      width: '46px'\r\n    },\r\n    footerContainer: {\r\n      position: 'absolute',\r\n      left: 0,\r\n      right: 0,\r\n      bottom: '-115px',\r\n      zIndex: -1,\r\n    },\r\n    hide: {\r\n      display: 'none'\r\n    },\r\n\r\n    lastLogin: {\r\n      // paddingBottom: '12px',\r\n\r\n    },\r\n    loaderLine: {\r\n      flexGrow: 1,\r\n      position: 'fixed',\r\n      top: '60px',\r\n      width: '100%',\r\n      zIndex: 4\r\n    },\r\n    menuButton: {\r\n      marginLeft: 12,\r\n      marginRight: 36\r\n    },\r\n    portalName: {\r\n      left: '100px'\r\n    },\r\n    root: {\r\n      color: 'grey',\r\n      display: 'flex',\r\n      flexGrow: 1,\r\n      fontSize: '13px',\r\n      // height: '97vh',\r\n      position: 'relative',\r\n      zIndex: 1\r\n    },\r\n    space: {\r\n      marginTop: '25px'\r\n    },\r\n    toolbar: {\r\n      alignItems: 'center',\r\n      display: 'flex',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n    }\r\n  };\r\n};\r\nexport default styles;\r\n","import {\r\n  Switch,\r\n  withRouter,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport { withStyles, withWidth } from '@material-ui/core';\r\nimport classNames from 'classnames';\r\nimport { connect } from 'react-redux';\r\nimport * as React from 'react';\r\nimport { DashBoard, Spam, Draft, DeletedMail } from '../index';\r\nimport PrimarySearchAppBar from '../../components/appHeader/appHeader';\r\nimport Sidebar from '../../components/sidebar/sidebar';\r\nimport links from '../../routes/NavLinks';\r\nimport styles from './home.style';\r\nimport { fetchUserDetails } from '../dashboard/dashboard.action';\r\nimport { fetchUserDetailsInDraft } from '../draft/draft.action';\r\nimport { fetchUserDetailsInSpam } from '../spam/spam.action';\r\nimport inBoxEmail from '../dashboard/inbox .json';\r\nimport DraftEmail from '../draft/draft.json';\r\nimport spamEmail from '../spam/spam.json';\r\n\r\nclass HomePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: true\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.props.fetchUserDetails(inBoxEmail);\r\n    this.props.fetchUserDetailsInDraft(DraftEmail);\r\n    this.props.fetchUserDetailsInSpam(spamEmail);\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const mainClassCss = classNames(\r\n      classes.content,\r\n      this.state.open ? classes.contentOpen : classes.contentClose,\r\n    );\r\n    return (\r\n      <div style={{\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        // height: '97vh',\r\n        width: '100%',\r\n        position: 'relative',\r\n        zIndex: 1\r\n      }}>\r\n        <PrimarySearchAppBar />\r\n        <Sidebar open={this.state.open}\r\n          applicationName={'Kredifi Admin'}\r\n          handleDrawer={this.handleDrawer}\r\n          sidebarContent={links}\r\n          handleSidebarClick={this.handleSidebarClick} />\r\n        <main className={mainClassCss}>\r\n          <div className={classes.toolbar} />\r\n          <div style={{ marginTop: '50px' }}>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={DashBoard} key=\"AppHome\" />\r\n              <Route exact path=\"/spam\" component={Spam} key=\"AppHome\" />\r\n              <Route exact path=\"/draft\" component={Draft} key=\"AppHome\" />\r\n              <Route exact path=\"/deleted\" component={DeletedMail} key=\"AppHome\" />\r\n            </Switch>\r\n          </div>\r\n        </main>\r\n      </div >\r\n    );\r\n  }\r\n\r\n}\r\nconst mapStateToProps = ({\r\n\r\n}) => ({\r\n\r\n});\r\nexport default withRouter(connect(mapStateToProps, { fetchUserDetails, fetchUserDetailsInDraft, fetchUserDetailsInSpam })(withWidth()(withStyles(styles)(HomePage))));\r\n","import React from 'react';\nimport {\n  HashRouter, Switch, Route,\n} from 'react-router-dom';\nimport './App.css';\nimport Home from './conatiners/home/home';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <HashRouter>\n          <Switch>\n            <Route exact={false} path=\"/\" component={Home} key=\"AppLogin\" />\n          </Switch>\n        </HashRouter>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const INITIAL_STATE = {\r\n    emailDetails: [],\r\n    email: 'deeptikanta1234@gmail.com',\r\n    starredEmail: [],\r\n};\r\nconst DashBoardReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'RECEIVE_EMAIL_DEATILS': return { ...state, emailDetails: action.payload }\r\n        case 'RECEIVE_LOGINED_USER': return { ...state, email: action.payload }\r\n        case 'UPDATE_EMAIL_DETAILS_OF_USER': return { ...state, emailDetails: action.payload }\r\n        case 'FETCH_STARRED_EMAIL': return { ...state, starredEmail: action.payload }\r\n        case 'UN_MOUNT_STARRED_EMAIL': return { ...state, starredEmail: [] }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default DashBoardReducer;","const INITIAL_STATE = {\r\n    emailDetails: [],\r\n    email: 'deeptikanta1234@gmail.com',\r\n    starredEmail: [],\r\n};\r\nconst SpamReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'RECEIVE_EMAIL_DEATILS_SPAM': return { ...state, emailDetails: action.payload }\r\n        case 'RECEIVE_LOGINED_USER_SPAM': return { ...state, email: action.payload }\r\n        case 'UPDATE_EMAIL_DETAILS_OF_USER_SPAM': return { ...state, emailDetails: action.payload }\r\n        case 'FETCH_STARRED_EMAIL_SPAM': return { ...state, starredEmail: action.payload }\r\n        case 'UN_MOUNT_STARRED_EMAIL_SPAM': return { ...state, starredEmail: [] }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default SpamReducer;","const INITIAL_STATE = {\r\n    emailDetails: [],\r\n    email: 'deeptikanta1234@gmail.com',\r\n    starredEmail: [],\r\n};\r\nconst DraftReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'RECEIVE_EMAIL_DEATILS_DRAFT': return { ...state, emailDetails: action.payload }\r\n        case 'RECEIVE_LOGINED_USER_DRAFT': return { ...state, email: action.payload }\r\n        case 'UPDATE_EMAIL_DETAILS_OF_USER_DRAFT': return { ...state, emailDetails: action.payload }\r\n        case 'FETCH_STARRED_EMAIL_DRAFT': return { ...state, starredEmail: action.payload }\r\n        case 'UN_MOUNT_STARRED_EMAIL_DRAFT': return { ...state, starredEmail: [] }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default DraftReducer;","const INITIAL_STATE = {\r\n    emailDetails: [],\r\n};\r\nconst DeletedMailReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case 'UPDATE_DELETED_EMAIL_DETAILS_OF_USER': return { ...state, emailDetails: [...state.emailDetails, action.payload] }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default DeletedMailReducer;","import { combineReducers } from \"redux\";\r\nimport DashBoardReducer from '../conatiners/dashboard/dashboard.reducer';\r\nimport SpamReducer from '../conatiners/spam/spam.reducer';\r\nimport DraftReducer from '../conatiners/draft/draft.reducer';\r\nimport DeletedMailReducer from '../conatiners/deleted/deleted.reducer';\r\n\r\nexport default combineReducers({ DashBoardReducer, SpamReducer, DraftReducer, DeletedMailReducer });\r\n","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\r\nimport thunk from 'redux-thunk'\r\nimport createHistory from 'history/createBrowserHistory'\r\nimport rootReducer from '../src/reducers';\r\nimport ReduxLogger from 'redux-logger';\r\n\r\nexport const history = createHistory()\r\n\r\nconst initialState = {}\r\nconst enhancers = []\r\nconst middleware = [\r\n  thunk,\r\n  routerMiddleware(history)\r\n]\r\n\r\nif (process.env.NODE_ENV === 'development') {\r\n  const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__\r\n\r\n  if (typeof devToolsExtension === 'function') {\r\n    enhancers.push(devToolsExtension());\r\n    enhancers.push(ReduxLogger);\r\n  }\r\n}\r\n\r\nconst composedEnhancers = compose(\r\n  applyMiddleware(...middleware),\r\n  ...enhancers\r\n)\r\n\r\nconst store = createStore(\r\n  connectRouter(history)(rootReducer),\r\n  initialState,\r\n  composedEnhancers\r\n)\r\n\r\nexport default store\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store'\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n   <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}